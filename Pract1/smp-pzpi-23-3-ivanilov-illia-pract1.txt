МІНІСТЕРСТВО НАУКИ І ОСВІТИ УКРАЇНИ


ХАРКІВСЬКИЙ НАЦІОНАЛЬНИЙ
УНІВЕРСИТЕТ РАДІОЕЛЕКТРОНІКИ






Кафедра «Програмна інженерія»








ЗВІТ
з практичного заняття №1
з дисципліни «Скриптові мови програмування»












Виконав:
ст. гр. ПЗПІ-22-3
Іванілов І.В.
Прийняв:
Сокорчук І. П.










Харків 2025
ЗАВДАННЯ ПЗ1
Мета роботи
Написати Bash скрипт, який друкуватиме на екрані ялинку із двох ярусів гілок, стовбура та шару снігу.
Хід роботи
1) Перевірити на правильність вхідні дані:
- Параметри скрипта повинні мати додатнє значення та висота повинна бути більше 8, а ширина 7, щоб зберегти симетричність ялинки. Перевірка в коді:
if (( treeHeight < 8 || snowWidth < 7 )); then
    echo "Помилка: неможливо побудувати ялинку" >&2
    exit 1
fi


        - Параметри повинні округлятися до правильних в меншу сторону. Якщо висота непарна – округляти до парноъ в меншу сторону. Якщо ширина парна – округлять до парного числа. Реалізація в коді.
if (( treeHeight % 2 == 1 )); then
    ((treeHeight--))
fi
if (( snowWidth % 2 == 0 )); then
    ((snowWidth--))
fi


- Різниця між висотою та шириною не може бути від’ємна та перевищувати 2, тобто ширина не може бути більше висоти. В коді:
diff=$((treeHeight - snowWidth))
if (( diff < 0 || diff > 2 )); then
echo "Помилка: різниця між висотою ялинки та шириною снігу повинна бути в діапазоні [0, 2]" >&2
exit 1
fi


2) У скрипті потрібно обовʼязково використати такі конструкції:
if ... then ... fi  
while ... do ... done  
until ... do ... done  
for ... in .. do ... done  
for ((...)); do ... done  
У скрипті також потрібно використати функцію.






- Конструкція if ... then ... fi використовувалась в перевірці на валідність параметрів;
- Функція використовується для побудування ярусів ялинки:
print_layer() {
    currentSymbols=$1
    symbol="$2"
    extraLine=$3


    for ((j = 0; j < sectionsHeight + extraLine; j++)); do
        spaceCount=$(((snowWidth - currentSymbols) / 2))
        printf '%*s' "$spaceCount" ""


        for ((k = 0; k < currentSymbols; k++)); do
            printf '%s' "$symbol"
        done


        echo
        ((currentSymbols += 2))


        if [[ $symbol == "#" ]]; then
            symbol="*"
        else
            symbol="#"
        fi
    done
}


В ній також використовується конструкція for ((...)); do ... done
- while ... do ... done використовується для друкування пробілів, в коді:
while (( space > 0 )); do
    spaces+=" "
    ((space--))
done


- Конструкції for ... in .. do ... done та until ... do ... done використовувались для друкування стовбуру та нижнього шару снігу, в коді:
for i in {1 2}; do
    echo "$spaces###"
done


snow=""
counter=0
until (( counter == snowWidth )); do
    snow+="*"
    ((counter++))
done




Програмний код: див. Додаток А
Результат виконання програми з аргументами: 13 - висота ялинки; 11 - ширина шару снігу:
         *
        ###
      *****
    #######
  *********
        ###
      *****
    #######
  *********
        ###
        ###
***********


ДОДАТОК А
Відеозапис
        Відеозапис презентації результатів лабораторної роботи:
https://youtu.be/zcFFxx77Skg
00:00 Представлення
00:17 Тестування скрипта
01:09 Початок пояснення скрипту
01:16 Перевірка параметрів
03:20 Функція для побудови ярусів ялинки
06:08 Пояснення аргументів функції
07:30 Побудова стовбуру
ДОДАТОК Б
Графічні матеріали
  

Рисунок Б.1 – Коректний результат роботи скрипта
  

Рисунок Б.2 – Обробка неправильних параметрів (значення недостатні для побудови ялинки)


  

Рисунок Б.3 - Обробка неправильних параметрів (повідомлення про велику різницю між значеннями)


  

Рисунок Б.4 - Обробка неправильних параметрів (значення повинні бути додатні)




ДОДАТОК B
Програмний код 
В.1 Головний скрипт
  1 #!/bin/bash
  2
  3 treeHeight=$1
  4 snowWidth=$2
  5
  6 if (( treeHeight < 8 || snowWidth < 7 )); then
  7     echo "Помилка: неможливо побудувати ялинку" >&2
  8     exit 1
  9 fi
 10
 11 if (( treeHeight % 2 == 1 )); then
 12     ((treeHeight--))
 13 fi
 14
 15 if (( snowWidth % 2 == 0 )); then
 16     ((snowWidth--))
 17 fi
 18
 19 diff=$((treeHeight - snowWidth))
 20 if (( diff < 0 || diff > 2 )); then
 21     echo "Помилка: різниця між висотою ялинки та шириною снігу повинна бути в діапазоні [0, 2]" >&2
 22     exit 1
 23 fi
 24
 25 sectionsHeight=$(((treeHeight - 3) / 2))
 26
 27 print_layer() {
 28     currentSymbols=$1
 29     symbol="$2"
 30     extraLine=$3
 31
 32     for ((j = 0; j < sectionsHeight + extraLine; j++)); do
 33         spaceCount=$(((snowWidth - currentSymbols) / 2))
 34         printf '%*s' "$spaceCount" ""
 35
 36         for ((k = 0; k < currentSymbols; k++)); do
 37             printf '%s' "$symbol"
 38         done
 39
 40         echo
 41         ((currentSymbols += 2))
 42
 43         if [[ $symbol == "#" ]]; then
 44             symbol="*"
 45         else
 46             symbol="#"
 47         fi
 48     done
 49 }
 50
 51 lastSymbol="*"
 52 if (( sectionsHeight % 2 == 0 )); then
 53     lastSymbol="#"
 54 fi
 55
 56 print_layer 1 "*" 1
 57 print_layer 3 "$lastSymbol" 0
 58
 59 space=$(((snowWidth - 3) / 2))
 60 spaces=""
 61 while (( space > 0 )); do
 62     spaces+=" "
 63     ((space--))
 64 done
 65
 66 for i in {1 2}; do
 67     echo "$spaces###"
 68 done
 69
 70 snow=""
 71 counter=0
 72 until (( counter == snowWidth )); do
 73     snow+="*"
 74     ((counter++))
 75 done
 76
 77 echo "$snow"
 78
